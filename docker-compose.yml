version: '3'

services:
  nginx:
    depends_on:
      - postgres
      - api
      - client
      # - mongo
    restart: always
    build:
      dockerfile: Dockerfile-nginx
      context: ./devops
    ports:
      - '${APP_PORT:-80}:80'
    networks:
      - shop-network

  api:
    build:
      dockerfile: Dockerfile-express
      context: ${BACK_END_PATH}
    depends_on:
      # - mongo
      - postgres
    volumes:
      - /app/node_modules
      - ${BACK_END_PATH}:${DOCUMENT_ROOT}
    networks:
      - shop-network

  client:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile-react
      context: ${FRONT_END_PATH}
    volumes:
      - /app/node_modules
      - ${FRONT_END_PATH}:${DOCUMENT_ROOT}
    networks:
      - shop-network

  # mongo:
  #   image: mongo
  #   restart: always
  #   environment:
  #     MONGO_INITDB_DATABASE: shop
  #   volumes:
  #     - mongo-data:/data/db
  #   command: --replSet rs0
  #   ports:
  #     - '${DB_PORT:-27017}:27017'
  #   networks:
  #     - shop-network

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    ports:
      - '${POSTGRES_DB_PORT:-5432}:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - shop-network

volumes:
  # mongo-data:
  pgdata:

networks:
  shop-network:
    driver: bridge
    