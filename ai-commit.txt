feat: Implement PostgreSQL migration and comprehensive UI/UX redesign

This commit introduces a major architectural shift by migrating the backend
database from MongoDB to PostgreSQL, coupled with a significant overhaul
of the frontend user interface and experience.

Key changes include:

Database Migration:
- Switched Prisma datasource from MongoDB to PostgreSQL.
- Updated Prisma schema to use integer IDs and relational models.
- Refactored `seed.js` to generate a larger dataset (1000 products per category)
  and use static image URLs for consistency.
- Adjusted `ProductRepository` to parse product IDs as integers.

Frontend Redesign & Features:
- Introduced a new design system with custom CSS variables for consistent theming.
- Completely redesigned core components: `Layout` (header, footer), `HomeSlider`
  (hero section, product carousels, trending categories), `CategorySection`,
  `ProductSection`, `ProductItem`, `SearchInput`, and `Loading` spinner.
- Implemented advanced product listing features on the category page:
    - Client-side filtering by price, category, brand, and rating.
    - Dynamic sorting options (price, rate).
    - Pagination for efficient browsing of large product sets.
- Integrated Material-UI components for filtering and pagination.
- Improved overall responsiveness and visual appeal.

Infrastructure & Docker:
- Updated `docker-compose.yml` to replace MongoDB with PostgreSQL service.
- Adjusted Nginx configuration to support Next.js HMR and new frontend port.
- Upgraded Node.js versions in both backend and frontend Dockerfiles (Node 16 -> 20).
- Optimized Docker build processes for both services.
- Added `FRONT_END_PORT` environment variable for frontend service.

These changes significantly enhance the application's performance, scalability,
and provide a modern, intuitive shopping experience.
