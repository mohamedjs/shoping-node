diff --git a/.env b/.env
index 0ae069a..2cfe8fb 100644
--- a/.env
+++ b/.env
@@ -2,4 +2,5 @@ DOCUMENT_ROOT=/app
 APP_PORT=5000
 DB_PORT=27017
 FRONT_END_PATH=./front-end
-BACK_END_PATH=./back-end
\ No newline at end of file
+BACK_END_PATH=./back-end
+POSTGRES_DB_PORT=5432
\ No newline at end of file
diff --git a/back-end/Dockerfile-express b/back-end/Dockerfile-express
index c97f37b..b35162f 100644
--- a/back-end/Dockerfile-express
+++ b/back-end/Dockerfile-express
@@ -1,22 +1,26 @@
-# Use an official Node runtime as a parent image
-FROM node:16-alpine
+# Use a stable, Debian-based Node image
+FROM node:20-slim
 
+# Install system dependencies (OpenSSL, libvips for sharp)
+RUN apt-get update && \
+    apt-get install -y openssl libvips libvips-dev && \
+    apt-get clean
+
+# Set working directory
 WORKDIR /app
 
-COPY package.json ./
-COPY package-lock.json ./
-COPY ./prisma prisma
-COPY ./ ./
-COPY mongo.conf /etc/mongod.conf.orig
+# Copy package files first
+COPY package*.json ./
 
-RUN npm i
+# Install dependencies (sharp will pick the correct binary automatically)
+RUN npm install
 
-RUN npm install --arch=arm64 --platform=linuxmusl sharp
-RUN npm i -g prisma
-RUN prisma generate
-RUN npm uninstall sharp
-RUN npm install sharp
+# Copy Prisma files and generate client
+COPY ./prisma ./prisma
+RUN npx prisma generate
 
-# docker-compose exec mongo mongosh --eval "rs.initiate({_id: 'rs0', members: [{_id: 0, host: 'localhost:27017'}]});"
+# Copy rest of the app
+COPY . .
 
-CMD ["npm", "run", "start:dev"]
\ No newline at end of file
+# Start app in development mode
+CMD ["npm", "run", "start:dev"]
diff --git a/back-end/modules/products/ProductRepository.js b/back-end/modules/products/ProductRepository.js
index 2e0f642..e395599 100644
--- a/back-end/modules/products/ProductRepository.js
+++ b/back-end/modules/products/ProductRepository.js
@@ -59,9 +59,9 @@ export default class ProductRepository {
     static async findProduct(req) {
         const { id } = req.params
         const product = await prisma.product.findUnique({
-            where: { id },
+            where: { id: parseInt(id) },
             include: {
-                category:true,
+                category: true,
                 images: true
             }
         })
diff --git a/back-end/package.json b/back-end/package.json
index 9046b27..118161b 100644
--- a/back-end/package.json
+++ b/back-end/package.json
@@ -13,7 +13,7 @@
     "start:dev": "nodemon --exec babel-node bin/www.js"
   },
   "dependencies": {
-    "@prisma/client": "^4.11.0",
+    "@prisma/client": "^6.9.0",
     "body-parser": "^1.20.0",
     "cookie-parser": "~1.4.4",
     "debug": "~2.6.9",
@@ -38,8 +38,8 @@
     "@babel/plugin-proposal-class-properties": "^7.18.6",
     "@babel/plugin-proposal-object-rest-spread": "^7.18.9",
     "@babel/preset-env": "^7.18.10",
-    "@faker-js/faker": "^7.6.0",
-    "prisma": "^4.11.0",
+    "@faker-js/faker": "^9.8.0",
+    "prisma": "^6.9.0",
     "rimraf": "^3.0.2"
   }
 }
diff --git a/back-end/prisma/schema.prisma b/back-end/prisma/schema.prisma
index 1433140..73f2363 100644
--- a/back-end/prisma/schema.prisma
+++ b/back-end/prisma/schema.prisma
@@ -3,23 +3,22 @@ generator client {
 }
 
 datasource db {
-  provider = "mongodb"
-  url      = "mongodb://mongo:27017/shop?directConnection=true"
+  provider = "postgresql"
+  url      = "postgresql://postgres:postgres@postgres:5432/app"
 }
 
 model Category {
-  id        String     @id @default(auto()) @map("_id") @db.ObjectId
+  id        Int       @id @default(autoincrement())
   name      String
   icon      String?
   image     String?
   products  Product[]
-  createdAt DateTime   @default(now())
-  updatedAt DateTime   @updatedAt
+  createdAt DateTime  @default(now())
+  updatedAt DateTime  @updatedAt
 }
 
-
 model Product {
-  id          String        @id @default(auto()) @map("_id") @db.ObjectId
+  id          Int           @id @default(autoincrement())
   name        String
   icon        String?
   image       String?
@@ -29,33 +28,32 @@ model Product {
   stock       Int?
   price       Float
   images      ProductImage[]
-  categoryId  String        @db.ObjectId
+  categoryId  Int
   category    Category      @relation(fields: [categoryId], references: [id])
   createdAt   DateTime      @default(now())
   updatedAt   DateTime      @updatedAt
 }
 
 model ProductImage {
-  id          String        @id @default(auto()) @map("_id") @db.ObjectId
-  image       String
-  productId   String        @db.ObjectId
-  product     Product       @relation(fields: [productId], references: [id])
-  createdAt   DateTime      @default(now())
-  updatedAt   DateTime      @updatedAt
+  id        Int      @id @default(autoincrement())
+  image     String
+  productId Int
+  product   Product  @relation(fields: [productId], references: [id])
+  createdAt DateTime @default(now())
+  updatedAt DateTime @updatedAt
 }
 
-
 model Post {
-  id       String    @id @default(auto()) @map("_id") @db.ObjectId
-  slug     String    @unique
+  id       Int      @id @default(autoincrement())
+  slug     String   @unique
   title    String
   body     String
-  author   User      @relation(fields: [authorId], references: [id])
-  authorId String    @db.ObjectId
+  author   User     @relation(fields: [authorId], references: [id])
+  authorId Int
 }
 
 model User {
-  id       String   @id @default(auto()) @map("_id") @db.ObjectId
+  id       Int      @id @default(autoincrement())
   email    String   @unique
   name     String?
   password String?
@@ -64,10 +62,12 @@ model User {
   posts    Post[]
 }
 
-// Address is an embedded document
-type Address {
-  street String
-  city   String
-  state  String
-  zip    String
+model Address {
+  id      Int     @id @default(autoincrement())
+  street  String
+  city    String
+  state   String
+  zip     String
+  userId  Int     @unique
+  user    User    @relation(fields: [userId], references: [id])
 }
\ No newline at end of file
diff --git a/back-end/prisma/seed.js b/back-end/prisma/seed.js
index 55cda22..2832177 100644
--- a/back-end/prisma/seed.js
+++ b/back-end/prisma/seed.js
@@ -1,109 +1,118 @@
-import { PrismaClient } from '@prisma/client'
+import { PrismaClient } from '@prisma/client';
 import { faker } from '@faker-js/faker';
 
-const prisma = new PrismaClient()
+const prisma = new PrismaClient();
 
 const userData = [
   {
-    name: 'Alice',
-    email: 'alice@prisma.io',
-    password: "123456"
+    name: 'John Doe',
+    email: 'john@example.com',
+    password: "secure123"
+  },
+  {
+    name: 'Jane Smith',
+    email: 'jane@example.com',
+    password: "secure456"
   }
-]
+];
 
 const categoryData = [
   {
     name: 'smartphones',
-    image: faker.image.fashion(219, 200, true),
+    image: 'https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=219&h=200&fit=crop',
     icon: 'mobile',
   },
   {
     name: 'laptops',
-    image: faker.image.fashion(219, 200, true),
+    image: 'https://images.unsplash.com/photo-1496181133206-80ce9b88a853?w=219&h=200&fit=crop',
     icon: 'laptop',
   },
   {
     name: 'furniture',
-    image: faker.image.fashion(219, 200, true),
+    image: 'https://images.unsplash.com/photo-1555041469-a586c61ea9bc?w=219&h=200&fit=crop',
     icon: 'couch',
   },
   {
     name: 'womens-shoes',
-    image: faker.image.fashion(219, 200, true),
+    image: 'https://images.unsplash.com/photo-1543163521-1bf539c55dd2?w=219&h=200&fit=crop',
     icon: 'shoe-prints',
   },
   {
     name: 'womens-dresses',
-    image: faker.image.fashion(219, 200, true),
+    image: 'https://images.unsplash.com/photo-1572804013309-59a88b7e92f1?w=219&h=200&fit=crop',
     icon: 'person-dress',
   },
   {
     name: 'womens-jewellery',
-    image: faker.image.fashion(219, 200, true),
+    image: 'https://images.unsplash.com/photo-1515405295579-ba7b45403062?w=219&h=200&fit=crop',
     icon: 'gem',
   },
   {
     name: 'motorcycle',
-    image: faker.image.fashion(219, 200, true),
+    image: 'https://images.unsplash.com/photo-1558981806-ec527fa84c39?w=219&h=200&fit=crop',
     icon: 'motorcycle',
   },
   {
     name: 'mens-watches',
-    image: faker.image.fashion(219, 200, true),
+    image: 'https://images.unsplash.com/photo-1524805444758-089113d48a6d?w=219&h=200&fit=crop',
     icon: 'clock',
   }
-]
+];
 
-const products = [...Array(10)].map(() => ({
-  name: faker.commerce.productName(),
-  brand: faker.commerce.department(),
-  stock: faker.datatype.number({ max: 100 }) ,
-  rate: faker.datatype.number({ max: 5 }) ,
-  icon: 'laptop',
-  image: faker.image.food(1024, 724, true),
-  description: faker.commerce.productDescription(),
-  price: Number(faker.commerce.price()),
-}));
+async function main() {
+  console.log(`🌱 Starting seeding ...`);
 
-const images = [...Array(5)].map(() => ({
-  image: faker.image.food(1024, 724, true),
-}));
+  // Delete existing data
+  // await prisma.image.deleteMany();
+  // await prisma.product.deleteMany();
+  // await prisma.category.deleteMany();
+  // await prisma.user.deleteMany();
 
-async function main() {
-  console.log(`Start seeding ...`)
-  // await prisma.user.deleteMany()
-  // await prisma.category.deleteMany()
-  // await prisma.product.deleteMany()
+  // Create users
   for (const u of userData) {
-    const user = await prisma.user.create({
-      data: u,
-    })
-    console.log(`Created user with id: ${user.id}`)
+    const user = await prisma.user.create({ data: u });
+    console.log(`✅ Created user: ${user.email}`);
   }
-  for (var i=0; i < categoryData.length; i++) {
-    const category = await prisma.category.create({
-      data: categoryData[i],
-    })
-    products[i].categoryId = category.id
-    products[i].images = {
-      create: images
-    }
-    for (let index = 0; index < 5; index++) {
-      await prisma.product.create({
-        data: products[i],
-      })
+
+  // Create categories and products
+  for (const cat of categoryData) {
+    const category = await prisma.category.create({ data: cat });
+    console.log(`📁 Created category: ${category.name}`);
+
+    // Create 5 products per category
+    for (let i = 0; i < 5; i++) {
+      const product = await prisma.product.create({
+        data: {
+          name: faker.commerce.productName(),
+          brand: faker.company.name(),
+          stock: faker.number.int({ min: 10, max: 100 }),
+          rate: faker.number.int({ min: 3, max: 5 }),
+          icon: category.icon,
+          description: faker.commerce.productDescription(),
+          price: Number(faker.commerce.price({ min: 50, max: 2000 })),
+          image: `https://picsum.photos/seed/product-${faker.string.uuid()}/600/600`,
+          categoryId: category.id,
+          images: {
+            create: [...Array(4)].map(() => ({
+              image: `https://picsum.photos/seed/gallery-${faker.string.uuid()}/600/600`
+            }))
+          }
+        }
+      });
+
+      console.log(`🛍️  Created product: ${product.name} (${category.name})`);
     }
-    console.log(`Created category with id: ${category.id}`)
   }
-  console.log(`Seeding finished.`)
+
+  console.log(`✅ Seeding complete!`);
 }
 
 main()
   .then(async () => {
-    await prisma.$disconnect()
+    await prisma.$disconnect();
   })
   .catch(async (e) => {
-    console.error(e)
-    await prisma.$disconnect()
-    process.exit(1)
-  })
\ No newline at end of file
+    console.error(e);
+    await prisma.$disconnect();
+    process.exit(1);
+  });
diff --git a/docker-compose.yml b/docker-compose.yml
index 55a8627..b41f7db 100644
--- a/docker-compose.yml
+++ b/docker-compose.yml
@@ -3,9 +3,10 @@ version: '3'
 services:
   nginx:
     depends_on:
+      - postgres
       - api
       - client
-      - mongo
+      # - mongo
     restart: always
     build:
       dockerfile: Dockerfile-nginx
@@ -20,7 +21,8 @@ services:
       dockerfile: Dockerfile-express
       context: ${BACK_END_PATH}
     depends_on:
-      - mongo
+      # - mongo
+      - postgres
     volumes:
       - /app/node_modules
       - ${BACK_END_PATH}:${DOCUMENT_ROOT}
@@ -40,21 +42,36 @@ services:
     networks:
       - shop-network
 
-  mongo:
-    image: mongo
-    restart: always
+  # mongo:
+  #   image: mongo
+  #   restart: always
+  #   environment:
+  #     MONGO_INITDB_DATABASE: shop
+  #   volumes:
+  #     - mongo-data:/data/db
+  #   command: --replSet rs0
+  #   ports:
+  #     - '${DB_PORT:-27017}:27017'
+  #   networks:
+  #     - shop-network
+
+  postgres:
+    image: postgres:14
+    container_name: postgres
     environment:
-      MONGO_INITDB_DATABASE: shop
-    volumes:
-      - mongo-data:/data/db
-    command: --replSet rs0
+      POSTGRES_USER: postgres
+      POSTGRES_PASSWORD: postgres
+      POSTGRES_DB: app
     ports:
-      - '${DB_PORT:-27017}:27017'
+      - '${POSTGRES_DB_PORT:-5432}:5432'
+    volumes:
+      - pgdata:/var/lib/postgresql/data
     networks:
       - shop-network
 
 volumes:
-  mongo-data:
+  # mongo-data:
+  pgdata:
 
 networks:
   shop-network:
diff --git a/front-end/Dockerfile-react b/front-end/Dockerfile-react
index 6684b41..3c6ece7 100644
--- a/front-end/Dockerfile-react
+++ b/front-end/Dockerfile-react
@@ -1,5 +1,5 @@
 # Use an official Node runtime as a parent image
-FROM node:16-alpine
+FROM node:20-alpine
 
 WORKDIR /app
 
diff --git a/front-end/components/Layout.js b/front-end/components/Layout.js
index 09394ee..58f7a3b 100644
--- a/front-end/components/Layout.js
+++ b/front-end/components/Layout.js
@@ -1,67 +1,96 @@
 import Head from 'next/head'
 import Link from 'next/link'
 import SearchInput from './SearchInput'
+
 export const Layout = ({ title, children }) => {
   return (
     <>
         <Head>
-            <title>{title ? title + '-amzona' : 'amzona'}</title>
-            <meta name="description" content="Generated by create next app" />
+            <title>{title ? `${title} - Amzona` : 'Amzona - Modern Shopping Experience'}</title>
+            <meta name="description" content="Your premier destination for modern shopping" />
             <link rel="icon" href="/favicon.ico" />
         </Head>
-        <div className='flex min-h-screen flex-col justify-between'>
-            <header>
-                <nav className='flex h-12 items-center px-3 justify-between shadow-md'>
-                    <Link href="/">
-                        <a className='text-lg font-bold'>amzona</a>
-                    </Link>
-                    <SearchInput />
-                    <div>
-                        <Link href="/cart">
-                            <a className='p-2'>Cart</a>
+        <div className='flex min-h-screen flex-col justify-between bg-[var(--background)]'>
+            <header className="sticky top-0 z-50 bg-white/90 backdrop-blur-md border-b border-gray-100 shadow-sm">
+                <nav className="flex h-20 items-center justify-between px-8">
+                    {/* Left: Navigation Links */}
+                    <div className="flex items-center gap-6">
+                        <Link href="/" className="nav-link font-semibold">Home</Link>
+                        <Link href="/products" className="nav-link font-semibold">Product</Link>
+                        <Link href="/brands" className="nav-link font-semibold">Brand</Link>
+                    </div>
+                    {/* Center: Logo */}
+                    <div className="flex-1 flex justify-center">
+                        <Link href="/" className="flex items-center space-x-2">
+                            <span className='text-3xl font-bold bg-gradient-to-r from-[var(--primary)] to-[var(--secondary)] bg-clip-text text-transparent tracking-tight'>
+                                Ghaza
+                            </span>
+                        </Link>
+                    </div>
+                    {/* Right: Search, Cart, User */}
+                    <div className="flex items-center gap-4 min-w-[320px] justify-end">
+                        <div className="w-48">
+                            <SearchInput />
+                        </div>
+                        <Link href="/cart" className="nav-link flex items-center relative">
+                            <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
+                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
+                            </svg>
                         </Link>
-                        <Link href="/login">
-                            <a className='p-2'>Login</a>
+                        <Link href="/login" className="nav-link flex items-center">
+                            {/* <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
+                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5.121 17.804A13.937 13.937 0 0112 15c2.5 0 4.847.655 6.879 1.804M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
+                            </svg> */}
+                            <span className="hidden md:inline">Login</span>
                         </Link>
                     </div>
                 </nav>
             </header>
-            <main className='container m-auto mt-4 px-4'>{children}</main>
-            <footer className="footer p-10 bg-base-200 text-base-content shadow-inner">
-                <div>
-                    <svg width="50" height="50" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fillRule="evenodd" clipRule="evenodd" className="fill-current"><path d="M22.672 15.226l-2.432.811.841 2.515c.33 1.019-.209 2.127-1.23 2.456-1.15.325-2.148-.321-2.463-1.226l-.84-2.518-5.013 1.677.84 2.517c.391 1.203-.434 2.542-1.831 2.542-.88 0-1.601-.564-1.86-1.314l-.842-2.516-2.431.809c-1.135.328-2.145-.317-2.463-1.229-.329-1.018.211-2.127 1.231-2.456l2.432-.809-1.621-4.823-2.432.808c-1.355.384-2.558-.59-2.558-1.839 0-.817.509-1.582 1.327-1.846l2.433-.809-.842-2.515c-.33-1.02.211-2.129 1.232-2.458 1.02-.329 2.13.209 2.461 1.229l.842 2.515 5.011-1.677-.839-2.517c-.403-1.238.484-2.553 1.843-2.553.819 0 1.585.509 1.85 1.326l.841 2.517 2.431-.81c1.02-.33 2.131.211 2.461 1.229.332 1.018-.21 2.126-1.23 2.456l-2.433.809 1.622 4.823 2.433-.809c1.242-.401 2.557.484 2.557 1.838 0 .819-.51 1.583-1.328 1.847m-8.992-6.428l-5.01 1.675 1.619 4.828 5.011-1.674-1.62-4.829z"></path></svg>
-                    <p>ACME Industries Ltd.<br/>Providing reliable tech since 1992</p>
-                </div>
-                <div>
-                    <span className="footer-title">Services</span> 
-                    <a className="link link-hover">Branding</a> 
-                    <a className="link link-hover">Design</a> 
-                    <a className="link link-hover">Marketing</a> 
-                    <a className="link link-hover">Advertisement</a>
-                </div> 
-                <div>
-                    <span className="footer-title">Company</span> 
-                    <a className="link link-hover">About us</a> 
-                    <a className="link link-hover">Contact</a> 
-                    <a className="link link-hover">Jobs</a> 
-                    <a className="link link-hover">Press kit</a>
-                </div> 
-                <div>
-                    <span className="footer-title">Legal</span> 
-                    <a className="link link-hover">Terms of use</a> 
-                    <a className="link link-hover">Privacy policy</a> 
-                    <a className="link link-hover">Cookie policy</a>
-                </div> 
-                <div>
-                    <span className="footer-title">Newsletter</span> 
-                    <div className="form-control w-80">
-                    <label className="label">
-                        <span className="label-text">Enter your email address</span>
-                    </label> 
-                    <div className="relative">
-                        <input type="text" placeholder="username@site.com" className="input input-bordered w-full pr-16" /> 
-                        <button className="btn btn-primary absolute top-0 right-0 rounded-l-none">Subscribe</button>
+            <main className='container m-auto mt-4 px-4 animate-fade-in'>{children}</main>
+            <footer className="bg-white mt-12">
+                <div className="container mx-auto px-6 py-12">
+                    <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
+                        <div className="space-y-4">
+                            <h3 className="text-xl font-bold text-[var(--text)]">Amzona</h3>
+                            <p className="text-gray-600">Your premier destination for modern shopping</p>
+                        </div>
+                        <div>
+                            <h4 className="font-semibold mb-4 text-[var(--text)]">Services</h4>
+                            <ul className="space-y-2">
+                                <li><a href="#" className="nav-link">Branding</a></li>
+                                <li><a href="#" className="nav-link">Design</a></li>
+                                <li><a href="#" className="nav-link">Marketing</a></li>
+                                <li><a href="#" className="nav-link">Advertisement</a></li>
+                            </ul>
+                        </div>
+                        <div>
+                            <h4 className="font-semibold mb-4 text-[var(--text)]">Company</h4>
+                            <ul className="space-y-2">
+                                <li><a href="#" className="nav-link">About us</a></li>
+                                <li><a href="#" className="nav-link">Contact</a></li>
+                                <li><a href="#" className="nav-link">Careers</a></li>
+                                <li><a href="#" className="nav-link">Press</a></li>
+                            </ul>
+                        </div>
+                        <div>
+                            <h4 className="font-semibold mb-4 text-[var(--text)]">Newsletter</h4>
+                            <div className="space-y-4">
+                                <p className="text-gray-600">Stay updated with our latest offers</p>
+                                <div className="flex">
+                                    <input 
+                                        type="email" 
+                                        placeholder="Enter your email" 
+                                        className="flex-1 px-4 py-2 rounded-l-lg border border-gray-200 focus:outline-none focus:border-[var(--primary)]"
+                                    />
+                                    <button className="button-primary rounded-l-none">
+                                        Subscribe
+                                    </button>
+                                </div>
+                            </div>
+                        </div>
                     </div>
+                    <div className="border-t border-gray-100 mt-12 pt-8 text-center text-gray-600">
+                        <p>&copy; {new Date().getFullYear()} Amzona. All rights reserved.</p>
                     </div>
                 </div>
             </footer>
diff --git a/front-end/components/SearchInput.js b/front-end/components/SearchInput.js
index 24ddec6..6d7fa27 100644
--- a/front-end/components/SearchInput.js
+++ b/front-end/components/SearchInput.js
@@ -4,14 +4,45 @@ import { useRouter } from 'next/router'
 const SearchInput = () => {
     const [search, setSearch] = useState('')
     const router = useRouter()
+
+    const handleSearch = (e) => {
+        if (e.key === 'Enter' && search.trim()) {
+            router.push(`/search/${search.trim()}`)
+        }
+    }
+
     return (
-        <div className="w-9/12">   
-            <label htmlFor="default-search" className="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-gray-300">Search</label>
-            <div className="relative">
-                <div className="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
-                    <svg aria-hidden="true" className="w-5 h-5 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
+        <div className="w-full">   
+            <div className="relative group">
+                <div className="flex absolute inset-y-0 left-0 items-center pl-4 pointer-events-none">
+                    <svg 
+                        aria-hidden="true" 
+                        className="w-5 h-5 text-gray-400 group-focus-within:text-[var(--primary)] transition-colors duration-300" 
+                        fill="none" 
+                        stroke="currentColor" 
+                        viewBox="0 0 24 24" 
+                        xmlns="http://www.w3.org/2000/svg"
+                    >
+                        <path 
+                            strokeLinecap="round" 
+                            strokeLinejoin="round" 
+                            strokeWidth="2" 
+                            d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
+                        />
+                    </svg>
                 </div>
-                <input onChange={(e) => setSearch(e.target.value)} onKeyPress={(e) => e.key == 'Enter' ? router.push(`/search/${search}`) : ''} type="search" id="default-search" className="block p-2 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search Mockups, Logos..." required />
+                <input 
+                    onChange={(e) => setSearch(e.target.value)}
+                    onKeyPress={handleSearch}
+                    type="search" 
+                    id="default-search" 
+                    className="block w-full p-3 pl-12 text-sm text-[var(--text)] bg-white rounded-full border border-gray-200 
+                             focus:ring-2 focus:ring-[var(--primary)]/20 focus:border-[var(--primary)] 
+                             transition-all duration-300 placeholder-gray-400
+                             hover:border-gray-300"
+                    placeholder="Search products..." 
+                    required 
+                />
             </div>
         </div>
     )
diff --git a/front-end/components/home/CategorySection.js b/front-end/components/home/CategorySection.js
index 8dcf6d1..47f0e9e 100644
--- a/front-end/components/home/CategorySection.js
+++ b/front-end/components/home/CategorySection.js
@@ -1,13 +1,13 @@
 import Link from 'next/link';
-import { useSelector, useDispatch } from 'react-redux'
-import React, {useEffect} from 'react'
+import { useSelector } from 'react-redux'
+import React from 'react'
 import Slider from "react-slick";
 import Loading from '../loading/index';
 
 const CategorySection = () => {
     let { load, categories } = useSelector(state => state.categories)
     var settings = {
-      dots: false,
+      dots: true,
       infinite: false,
       speed: 500,
       slidesToShow: 6,
@@ -17,54 +17,58 @@ const CategorySection = () => {
         {
           breakpoint: 1024,
           settings: {
-            slidesToShow: 5,
-            slidesToScroll: 5,
+            slidesToShow: 4,
+            slidesToScroll: 4,
             infinite: true,
             dots: true
           }
         },
         {
-          breakpoint: 600,
+          breakpoint: 768,
           settings: {
-            slidesToShow: 4,
-            slidesToScroll: 4,
+            slidesToShow: 3,
+            slidesToScroll: 3,
             initialSlide: 2
           }
         },
         {
           breakpoint: 480,
           settings: {
-            slidesToShow: 1,
-            slidesToScroll: 1
+            slidesToShow: 2,
+            slidesToScroll: 2
           }
         }
       ]
     };
+
     return (
-      <>
+      <div className="py-8">
+        <h2 className="text-2xl font-bold text-[var(--text)] mb-6 px-4">Shop by Category</h2>
         { load
           ? <Loading />  
-          : <Slider {...settings}>
+          : <Slider {...settings} className="category-slider">
               { categories.map((category, index) => (
-              <div className="transition duration-300 hover:scale-[1.1] p-4 mt-3 cursor-pointer" key={index}>
+                <div className="px-2" key={index}>
                   <Link href={`/category/${category.name}`}>
-                  <a className="relative w-full h-[200px] rounded inline-block">
-                    <div className="absolute left-0 bottom-0 w-full h-full z-10">
-                      <img
-                        src={category.image}
-                        className="absolute left-0 top-0 w-full h-full rounded z-10 object-cover"
+                    <a className="block group">
+                      <div className="relative overflow-hidden rounded-xl aspect-square">
+                        <img
+                          src={category.image}
+                          alt={category.name}
+                          className="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                         />
-                    </div>
-                    <div className="p-4 absolute bg-cyan-500 shadow-lg shadow-cyan-500/50 bottom-0 inset-x-0 z-20">
-                        <h3 className="bottom-px text-center text-white">{category.name}</h3>
-                    </div>
-                  </a>
+                        <div className="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
+                        <div className="absolute bottom-0 left-0 right-0 p-4 transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300">
+                          <h3 className="text-white text-lg font-semibold text-center">{category.name}</h3>
+                        </div>
+                      </div>
+                    </a>
                   </Link>
-              </div> 
-              )) }
+                </div> 
+              ))}
             </Slider>
         }
-      </>
+      </div>
     )
 }
 
diff --git a/front-end/components/home/HomeSlider.js b/front-end/components/home/HomeSlider.js
index 82202d3..bbcbd8d 100644
--- a/front-end/components/home/HomeSlider.js
+++ b/front-end/components/home/HomeSlider.js
@@ -1,68 +1,111 @@
 import Link from 'next/link';
 import Slider from "react-slick";
-import { useSelector, useDispatch } from 'react-redux';
+import { useSelector } from 'react-redux';
 import Loading from '../loading/index';
+import { useMemo } from 'react';
+
+const trendingSearches = [
+    'T Shirt', 'Women T Shirt', 'Men Pants', 'Skirt', 'Jacket Male', 'Watch', 'Suit'
+];
+
+const heroIllustration = '/hero-illustration.svg'; // Replace with your illustration path
 
 const HomeSlider = () => {
     let { load, categories } = useSelector(state => state.categories)
     let { loading, products } = useSelector(state => state.products)
+
     var settings = {
         dots: true,
-        arrows: false,
-        infinite: false,
+        arrows: true,
+        infinite: true,
         autoplay: true,
-        speed: 500,
+        autoplaySpeed: 3000,
+        speed: 800,
         slidesToShow: 1,
         slidesToScroll: 1,
         initialSlide: 0,
+        fade: true,
+        cssEase: 'linear',
+        pauseOnHover: true,
+        responsive: [
+            {
+                breakpoint: 1024,
+                settings: {
+                    arrows: false
+                }
+            }
+        ]
     };
-  return (
-    <>
-    {
-        load || loading 
-        ? <Loading />
-        : <div className="flex gap-1 justify-between mb-16 w-full h-[420px]">
-            <div className="card w-1/6 h-[420px]">
-                { categories.map((category, index) => ( 
-                    <Link key={index} href={`/category/${category.name}`}> 
-                        <div className="flex cursor-pointer justify-start p-1" key={index}>
-                            <i className={`h-8 w-8 mr-3 mt-3 text-center text-red-500 fa-solid fa-${category.icon} fa-lg`}></i>
-                            <h1>{category.name}</h1>
+
+    // Get only first 6 products for slider
+    const sliderProducts = useMemo(() => products.slice(0, 6), [products]);
+    // Get best seller/popular products (next 4)
+    const bestSellers = useMemo(() => products.slice(6, 8), [products]);
+
+    return (
+        <div className="py-8">
+            {load || loading 
+                ? <Loading />
+                : <div className="flex gap-6 justify-between mb-16 w-full h-[420px]">
+                    {/* Hero Section */}
+                    <div className="flex flex-col justify-between w-1/4 h-[420px] bg-white rounded-xl shadow-lg p-8 relative overflow-hidden">
+                        <div>
+                            <h1 className="text-3xl font-bold text-[var(--text)] mb-4 leading-tight">Buy This Now<br/>Become Shining</h1>
+                            <p className="text-gray-500 mb-6">Ecommerce or electronic commerce is the trading of goods and services.</p>
+                            <Link href="/shop">
+                                <a className="button-primary px-8 py-3 text-lg">Shop now</a>
+                            </Link>
+                        </div>
+                        <img src={heroIllustration} alt="Hero Illustration" className="absolute bottom-0 right-0 w-40 h-40 object-contain pointer-events-none select-none" style={{zIndex:0, opacity:0.9}} />
+                        <div className="mt-8 flex flex-wrap gap-2 z-10 relative">
+                            {trendingSearches.map((search, idx) => (
+                                <span key={idx} className="bg-[var(--primary)]/10 text-[var(--primary)] px-3 py-1 rounded-full text-xs font-semibold cursor-pointer hover:bg-[var(--primary)]/20 transition">{search}</span>
+                            ))}
                         </div>
-                    </Link>
-                ))}
-            </div>
-            <Slider className="w-4/6 shadow-md"  {...settings}>
-                { 
-                    products.map((product, index) => (
-                        <Link href={`/product/${product.id}`} key={index}>
-                            <div key={product.id}>
-                                <img 
-                                    src={product.image}
-                                    alt={product.name}
-                                    className="responsive w-full object-fit h-[420px] rounded"
-                                />
-                            </div>
-                        </Link>
-                    )) 
-                } 
-            </Slider>
-            <div className="flex flex-col w-1/6 h-[420px]">
-                {products.map((product, index) => (
-                    index < 2 ?
-                    <div key={index}>
-                        <img
-                            src={product.image}
-                            alt="title"
-                            className="w-[100%] h-[207px] mb-1"
-                        />
-                    </div> : ''
-                ))}
-            </div>
-        </div>            
-    }
-    </>
-  )
+                    </div>
+                    {/* Product Slider */}
+                    <Slider className="w-2/4 rounded-xl overflow-hidden shadow-lg" {...settings}>
+                        {sliderProducts.map((product, index) => (
+                            <Link href={`/product/${product.id}`} key={index}>
+                                <div className="relative group h-[420px] cursor-pointer">
+                                    <img 
+                                        src={product.image}
+                                        alt={product.name}
+                                        className="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
+                                    />
+                                    <div className="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent opacity-80"></div>
+                                    <div className="absolute bottom-0 left-0 right-0 p-8 text-white">
+                                        <h2 className="text-2xl font-bold mb-2 drop-shadow-lg">{product.name}</h2>
+                                        <p className="text-lg font-semibold drop-shadow">${product.price}</p>
+                                    </div>
+                                </div>
+                            </Link>
+                        ))}
+                    </Slider>
+                    {/* Best Seller/Popular Products */}
+                    <div className="flex flex-col w-1/4 h-[420px] gap-4">
+                        <h3 className="text-lg font-bold text-[var(--text)] mb-2 px-2">Best Seller</h3>
+                        {bestSellers.map((product, index) => (
+                            <Link href={`/product/${product.id}`} key={index}>
+                                <div className="relative group rounded-xl overflow-hidden h-[200px] bg-white shadow-md cursor-pointer">
+                                    <img
+                                        src={product.image}
+                                        alt={product.name}
+                                        className="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
+                                    />
+                                    <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-80"></div>
+                                    <div className="absolute bottom-0 left-0 right-0 p-4 text-white">
+                                        <p className="font-semibold text-base">{product.name}</p>
+                                        <p className="text-sm">${product.price}</p>
+                                    </div>
+                                </div>
+                            </Link>
+                        ))}
+                    </div>
+                </div>            
+            }
+        </div>
+    )
 }
 
 export default HomeSlider
\ No newline at end of file
diff --git a/front-end/components/home/ProductSection.js b/front-end/components/home/ProductSection.js
index 8297e22..a459133 100644
--- a/front-end/components/home/ProductSection.js
+++ b/front-end/components/home/ProductSection.js
@@ -8,9 +8,10 @@ import { ProductItem } from '../product/ProductItem';
 const ProductSection = ({categoryName}) => {
     let {loading, products} = useSelector(state => state.products)
     var product_settings = {
-        dots: false,
+        dots: true,
         infinite: false,
         autoplay: true,
+        autoplaySpeed: 4000,
         speed: 500,
         slidesToShow: 4,
         slidesToScroll: 4,
@@ -26,7 +27,7 @@ const ProductSection = ({categoryName}) => {
             }
         },
         {
-            breakpoint: 600,
+            breakpoint: 768,
             settings: {
             slidesToShow: 2,
             slidesToScroll: 2,
@@ -44,28 +45,31 @@ const ProductSection = ({categoryName}) => {
     };
 
   return (
-    <>
-    {loading 
+    <div className="py-8">
+      {loading 
         ? <Loading />
-        :<div className="flex flex-col justify-between">
+        : <div className="space-y-6">
             <Link href={`/category/${categoryName}`}>
-                <div className='flex h-12 items-center px-3 mb-3 bg-cyan-300 justify-between shadow-md'>
-                    <div className="cursor-pointer text-black text-base font-bold">{categoryName}</div>
-                    <a className="cursor-pointer text-black text-base font-bold flex">
-                        See All >
-                    </a>
+                <div className='flex items-center justify-between p-4 bg-gradient-to-r from-[var(--primary)]/10 to-[var(--secondary)]/10 rounded-xl hover:from-[var(--secondary)]/10 hover:to-[var(--primary)]/10 transition-all duration-300 cursor-pointer'>
+                    <div className="text-[var(--text)] text-lg font-bold">{categoryName}</div>
+                    <div className="flex items-center space-x-2 text-[var(--primary)] group">
+                        <span className="font-semibold">See All</span>
+                        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 transform group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
+                            <path fillRule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clipRule="evenodd" />
+                        </svg>
+                    </div>
                 </div>
             </Link>
-            <Slider {...product_settings}>
-            { products.filter(product => product.category.name === categoryName).map(product => (
-                <div key={product.id} className="p-2">
-                    <ProductItem product={product} key={product.id} /> 
-                </div>
-            ))}
+            <Slider {...product_settings} className="product-slider">
+                { products.filter(product => product.category.name === categoryName).map(product => (
+                    <div key={product.id} className="px-2">
+                        <ProductItem product={product} key={product.id} /> 
+                    </div>
+                ))}
             </Slider>
         </div>
-    }
-    </>
+      }
+    </div>
   )
 }
 
diff --git a/front-end/components/loading/index.js b/front-end/components/loading/index.js
index b407bd8..7a5b7c1 100644
--- a/front-end/components/loading/index.js
+++ b/front-end/components/loading/index.js
@@ -2,8 +2,11 @@ import React from 'react'
 
 export default function Loading() {
     return (
-        <div className="flex items-center justify-center">
-            <div className="w-40 h-40 border-t-4 border-b-4 border-green-900 rounded-full animate-spin"></div>
-          </div> 
+        <div className="flex items-center justify-center min-h-[200px]">
+            <div className="relative w-16 h-16">
+                <div className="absolute top-0 left-0 w-full h-full border-4 border-[var(--primary)]/20 rounded-full"></div>
+                <div className="absolute top-0 left-0 w-full h-full border-4 border-[var(--primary)] rounded-full animate-spin border-t-transparent"></div>
+            </div>
+        </div> 
     )
 }
diff --git a/front-end/components/product/ProductItem.js b/front-end/components/product/ProductItem.js
index 24f4c20..9ef4fa0 100644
--- a/front-end/components/product/ProductItem.js
+++ b/front-end/components/product/ProductItem.js
@@ -2,27 +2,33 @@ import Link from 'next/link';
 
 export const ProductItem = ({ product }) => {
   return (
-    <div className='card'>
+    <div className='card group'>
         <Link href={`/product/${product.id}`}>
-            <a>
+            <a className="block relative overflow-hidden rounded-t-xl">
                 <img
                     src={product.image}
                     alt={product.name}
-                    className='rounded shadow-md hover:blur-none w-[100%] h-[300px]'
+                    className='w-full h-[300px] object-cover transition-transform duration-500 group-hover:scale-110'
                 />
+                <div className="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
             </a>
         </Link>
-        <div className='flex flex-col justify-center items-center p-5'>
+        <div className='p-6 space-y-3'>
             <Link href={`/product/${product.id}`}>
                 <a>
-                    <h2 className='text-lg'>{product.brand}</h2>
+                    <h2 className='text-lg font-semibold text-[var(--text)] hover:text-[var(--primary)] transition-colors duration-300'>{product.brand}</h2>
                 </a>
             </Link>
-            <p className='mb-2'>{product.stock}</p>
-            <p>${product.price}</p>
-            <button className='button-primary bg-gradient-to-r from-violet-500 to-fuchsia-500' type='button'>
-                Add to Cart
-            </button>
+            <p className='text-sm text-gray-600'>{product.stock}</p>
+            <div className="flex items-center justify-between">
+                <p className='text-xl font-bold text-[var(--primary)]'>${product.price}</p>
+                <button 
+                    className='button-primary bg-gradient-to-r from-[var(--primary)] to-[var(--secondary)] hover:from-[var(--secondary)] hover:to-[var(--primary)]' 
+                    type='button'
+                >
+                    Add to Cart
+                </button>
+            </div>
         </div>
     </div>
   )
diff --git a/front-end/styles/globals.css b/front-end/styles/globals.css
index 31956b8..0afe999 100644
--- a/front-end/styles/globals.css
+++ b/front-end/styles/globals.css
@@ -2,12 +2,91 @@
 @tailwind components;
 @tailwind utilities;
 
+:root {
+  --primary: #FF6B6B;
+  --secondary: #4ECDC4;
+  --accent: #FFE66D;
+  --background: #F7F7F7;
+  --text: #2C3E50;
+}
+
+body {
+  background-color: var(--background);
+  color: var(--text);
+}
+
+/* Card component */
 .card {
-    @apply mb-5 block rounded-lg border border-gray-200 shadow-md
+  @apply mb-5 block rounded-xl border border-gray-100 shadow-lg transition-all duration-300 hover:shadow-xl hover:scale-[1.02] bg-white;
 }
+
+/* Primary button */
 .button-primary {
-    @apply bg-amber-300 hover:bg-amber-400 text-black font-bold py-2 px-4 border border-amber-700 rounded
+  background-color: var(--primary);
+  @apply hover:opacity-90 text-white font-semibold py-2.5 px-6 rounded-full 
+    transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 active:translate-y-0;
+}
+
+/* Secondary button */
+.button-secondary {
+  background-color: var(--secondary);
+  @apply hover:opacity-90 text-white font-semibold py-2.5 px-6 rounded-full 
+    transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 active:translate-y-0;
+}
+
+/* Custom animations */
+@keyframes fadeIn {
+  from { opacity: 0; transform: translateY(10px); }
+  to { opacity: 1; transform: translateY(0); }
+}
+
+.animate-fade-in {
+  animation: fadeIn 0.5s ease-out forwards;
+}
+
+/* Product card */
+.product-card {
+  @apply relative overflow-hidden rounded-xl transition-all duration-300;
+}
+
+.product-card:hover .product-image {
+  @apply scale-110;
 }
-.slick-prev:before, .slick-next:before {
-    color: black !important;
+
+.product-image {
+  @apply transition-transform duration-500;
+}
+
+/* Navigation link */
+.nav-link {
+  color: var(--text);
+  transition: color 0.3s;
+}
+
+.nav-link:hover {
+  color: var(--primary);
+}
+
+/* Scrollbar styles */
+::-webkit-scrollbar {
+  width: 8px;
+}
+
+::-webkit-scrollbar-track {
+  background-color: #f3f4f6; /* Tailwind gray-100 */
+}
+
+::-webkit-scrollbar-thumb {
+  background-color: rgba(255, 107, 107, 0.5); /* primary/50 */
+  border-radius: 9999px;
+}
+
+::-webkit-scrollbar-thumb:hover {
+  background-color: var(--primary);
+}
+
+/* Slick arrows (fix with raw CSS) */
+.slick-prev:before,
+.slick-next:before {
+  color: var(--primary) !important;
 }
